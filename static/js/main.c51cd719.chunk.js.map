{"version":3,"sources":["components/Header/Header.module.css","pages/RegisterPage/RegisterPage.module.css","pages/AuthPage/AuthPage.module.css","components/phonebook/Phonebook.module.css","components/ContactItem/ContactItem.module.css","services/api.js","redux/auth/authType.js","redux/auth/authAction.js","redux/auth/authOperations.js","pages/AuthPage/AuthPage.jsx","pages/RegisterPage/RegisterPage.jsx","components/Header/Header.jsx","redux/contacts/contactsType.js","redux/contacts/contactsAction.js","redux/contacts/contactOperations.js","components/phonebook/Phonebook.js","components/ContactItem/ContactItem.js","redux/contacts/contactSelectors.js","components/filterContacts/FilterContacts.jsx","components/contactList/ContactList.js","components/UserMenu/UserMenu.jsx","pages/PhonebookPage/PhonebookPage.jsx","services/PrivateRoute.jsx","contexts/ThemeContext.jsx","hoc/withTheme.jsx","App.js","redux/contacts/contactsReducer.js","redux/auth/authReducer.js","redux/rootReducer.js","redux/store.js","index.js"],"names":["module","exports","axios","defaults","baseURL","get","contact","post","id","delete","loginObject","registerObject","console","log","set","token","headers","common","Authorization","unset","type","authType","data","payload","error","dispatch","authAction","api","then","catch","getState","persistedToken","authRoot","connect","makeToggle","useDispatch","useState","email","setEmail","password","setPassword","className","styles","form","onSubmit","e","preventDefault","authOperations","value","onChange","target","placeholder","formInput","btn","RegisterPage","name","setName","state","isAuth","pageList","pageListItem","to","activeClassName","active","exact","getContactStart","contactsType","getContactSuccess","contactList","getContactFailure","addContactStart","addContactSuccess","addContactFailure","deleteContactStart","deleteContactSuccess","idContactDelete","deleteContactFailure","filterContact","nameContact","contactsActions","getContactError","number","Phonebook","contactName","handleChange","setState","handleSubmit","addContact","props","this","style","marginLeft","title","inputName","required","inputNumber","Component","contactsOperations","deleteContact","btnDelete","onClick","contactRoot","filterReducer","createSelector","contactReducer","contacts","searchInput","filter","toLowerCase","includes","contactsAction","letterSpacing","height","marginBottom","ContactList","getAllContacts","color","map","key","UserMenu","backgroundColor","fontWeight","border","width","UserPage","PrivateRoute","component","allProps","useSelector","render","Context","createContext","themeConfig","light","fontColor","bodybg","dark","ThemeContext","toggleTheme","prevTheme","theme","Provider","children","Consumer","withTheme","WrappedComponent","context","App","getUser","background","marginTop","borderColor","path","AuthPage","PhonebookPage","combineReducers","action","loading","contactError","initialAuthState","isLoading","authReducer","user","rootReducer","persistConfig","storage","whitelist","middleware","thunk","persistedReducer","persistReducer","store","createStore","composeWithDevTools","applyMiddleware","persistor","persistStore","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.c51cd719.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"pageList\":\"Header_pageList__b_0Hj\",\"pageListItem\":\"Header_pageListItem__1vnYI\",\"active\":\"Header_active__vmCnS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formInput\":\"RegisterPage_formInput__1kvlu\",\"btn\":\"RegisterPage_btn__MSj9y\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formInput\":\"AuthPage_formInput__2AQWh\",\"btn\":\"AuthPage_btn__3fSYq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btn\":\"Phonebook_btn__1UFp6\",\"inputName\":\"Phonebook_inputName__3ASW-\",\"inputNumber\":\"Phonebook_inputNumber__1T-La\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btnDelete\":\"ContactItem_btnDelete__xBuRM\"};","import axios from \"axios\";\n\naxios.defaults.baseURL = \"https://goit-phonebook-api.herokuapp.com\";\n\nconst getAllContacts = () => axios.get(\"/contacts\");\nconst addContact = (contact) => axios.post(\"/contacts\", contact);\nconst deleteContact = (id) => axios.delete(`/contacts/${id}`);\n\nconst getCurrentUser = () => axios.get(\"/users/current\");\n\nconst login = (loginObject) => axios.post(\"/users/login\", loginObject);\n\nconst register = (registerObject) => {\n  console.log(registerObject);\n  return axios.post(\"/users/signup\", registerObject);\n};\n\nconst logout = () => axios.post(\"/users/logout\");\n\nconst token = {\n  set(token) {\n    axios.defaults.headers.common.Authorization = `Bearer ${token}`;\n  },\n  unset() {\n    axios.defaults.headers.common.Authorization = \"\";\n  },\n};\n\nexport default {\n  getAllContacts,\n  addContact,\n  deleteContact,\n  getCurrentUser,\n  login,\n  register,\n  logout,\n  token,\n};","export default {\n  LOADING_START: \"auth/LOADING_START\",\n  LOADING_END: \"auth/LOADING_END\",\n\n  GET_USER_SUCCESS: \"auth/GET_USER_SUCCESS\",\n  GET_USER_FAILURE: \"auth/GET_USER_FAILURE\",\n\n  LOGIN_START: \"auth/LOGIN_START\",\n  LOGIN_SUCCESS: \"auth/LOGIN_SUCCESS\",\n  LOGIN_FAILURE: \"auth/LOGIN_FAILURE\",\n\n  REGISTER_START: \"auth/REGISTER_START\",\n  REGISTER_SUCCESS: \"auth/REGISTER_SUCCESS\",\n  REGISTER_FAILURE: \"auth/REGISTER_FAILURE\",\n\n  LOGOUT_START: \"auth/LOGOUT_START\",\n  LOGOUT_SUCCESS: \"auth/LOGOUT_SUCCESS\",\n  LOGOUT_FAILURE: \"auth/LOGOUT_FAILURE\",\n};\n","import authType from \"./authType\";\n\n/* LOADER */\n\nconst loadingStart = () => ({\n  type: authType.LOADING_START,\n});\n\nconst loadingEnd = () => ({\n  type: authType.LOADING_END,\n});\n\n/* GET CURRENT USER */\n\nconst getCurrentUserSuccess = (data) => ({\n  type: authType.GET_USER_SUCCESS,\n\n  payload: data,\n});\n\nconst getCurrentUserFailure = (error) => ({\n  type: authType.GET_USER_FAILURE,\n  payload: error,\n});\n\n/* LOGIN */\n\nconst loginSuccess = (data) => ({\n  type: authType.LOGIN_SUCCESS,\n\n  payload: data,\n});\n\nconst loginFailure = (error) => ({\n  type: authType.LOGIN_FAILURE,\n\n  payload: error,\n});\n\n/* REGISTER */\n\nconst registerSuccess = (data) => ({\n  type: authType.REGISTER_SUCCESS,\n\n  payload: data,\n});\n\nconst registerFailure = (error) => ({\n  type: authType.REGISTER_FAILURE,\n\n  payload: { error },\n});\n\n/* LOGOUT */\n\nconst logoutSuccess = () => ({\n  type: authType.LOGOUT_SUCCESS,\n});\n\nconst logoutFailure = (error) => ({\n  type: authType.LOGOUT_FAILURE,\n\n  payload: { error },\n});\n\nexport default {\n  loadingStart,\n  loadingEnd,\n\n  getCurrentUserSuccess,\n  getCurrentUserFailure,\n\n  loginSuccess,\n  loginFailure,\n\n  registerSuccess,\n  registerFailure,\n\n  logoutSuccess,\n  logoutFailure,\n};\n","import api from \"../../services/api\";\nimport authAction from \"./authAction\";\n\nconst loginOperation = (loginObject) => (dispatch) => {\n  console.log(dispatch);\n  dispatch(authAction.loadingStart());\n\n  api\n    .login(loginObject)\n    .then(({ data }) => {\n      console.log(data);\n      api.token.set(data.token);\n      dispatch(authAction.loginSuccess(data));\n    })\n    .catch((error) => dispatch(authAction.loginFailure(error)));\n};\n\nconst registerOperation = (registerObject) => (dispatch) => {\n  dispatch(authAction.loadingStart());\n  console.log(registerObject);\n\n  api\n    .register(registerObject)\n    .then(({ data }) => {\n      api.token.set(data.token);\n      dispatch(authAction.registerSuccess(data));\n    })\n    .catch((error) => dispatch(authAction.registerFailure(error)));\n};\n\nconst logoutOperation = () => (dispatch) => {\n  dispatch(authAction.loadingStart());\n\n  api\n    .logout()\n    .then(() => {\n      api.token.unset();\n      dispatch(authAction.logoutSuccess());\n    })\n    .catch((error) => dispatch(authAction.logoutFailure(error)));\n};\n\nconst getCurrentUser = () => (dispatch, getState) => {\n  const {\n    authRoot: { token: persistedToken },\n  } = getState();\n\n  if (!persistedToken) {\n    return;\n  }\n\n  api.token.set(persistedToken);\n\n  dispatch(authAction.loadingStart());\n  api\n    .getCurrentUser()\n    .then(({ data }) => {\n      dispatch(authAction.getCurrentUserSuccess(data));\n    })\n    .catch((error) => dispatch(authAction.getCurrentUserFailure(error)));\n};\n\nexport default {\n  loginOperation,\n  registerOperation,\n  logoutOperation,\n  getCurrentUser,\n};\n","import React, { useState } from \"react\";\nimport { useDispatch, connect } from \"react-redux\";\nimport authOperations from \"../../redux/auth/authOperations\";\nimport styles from \"./AuthPage.module.css\";\n\nconst AuthPage = () => {\n  const dispatch = useDispatch();\n\n  const [email, setEmail] = useState(\"\");\n  const handleChange = ({ target }) => setEmail(target.value);\n\n  const [password, setPassword] = useState(\"\");\n  const handlePassword = ({ target }) => setPassword(target.value);\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    dispatch(\n      authOperations.loginOperation({ email: email, password: password })\n    );\n  };\n\n  return (\n    <form className={styles.form} onSubmit={handleSubmit}>\n      <input\n        type=\"email\"\n        value={email}\n        onChange={handleChange}\n        placeholder=\"Enter your e-mail...\"\n        className={styles.formInput}\n      />\n      <input\n        type=\"password\"\n        value={password}\n        onChange={handlePassword}\n        placeholder=\"Enter your password\"\n        className={styles.formInput}\n      />\n      <button type=\"submit\" className={styles.btn}>\n        Login\n      </button>\n    </form>\n  );\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    makeToggle: () => dispatch({ type: \"auth/IS_SHOW\" }),\n  };\n};\n\nexport default connect(null, mapDispatchToProps)(AuthPage);\n","import React, { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport authOperations from \"../../redux/auth/authOperations\";\nimport styles from \"./RegisterPage.module.css\";\n\nconst RegisterPage = () => {\n  const dispatch = useDispatch();\n\n  const [name, setName] = useState(\"\");\n  const handleName = ({ target }) => setName(target.value);\n\n  const [email, setEmail] = useState(\"\");\n  const handleChange = ({ target }) => setEmail(target.value);\n\n  const [password, setPassword] = useState(\"\");\n  const handlePassword = ({ target }) => setPassword(target.value);\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    dispatch(\n      authOperations.registerOperation({\n        name: name,\n        email: email,\n        password: password,\n      })\n    );\n  };\n\n  return (\n    <form className={styles.form} onSubmit={handleSubmit}>\n      <input\n        type=\"text\"\n        value={name}\n        onChange={handleName}\n        placeholder=\"Enter your name...\"\n        className={styles.formInput}\n      />\n      <input\n        type=\"email\"\n        value={email}\n        onChange={handleChange}\n        placeholder=\"Enter your e-mail...\"\n        className={styles.formInput}\n      />\n      <input\n        type=\"password\"\n        value={password}\n        onChange={handlePassword}\n        placeholder=\"Enter your password\"\n        className={styles.formInput}\n      />\n      <button type=\"submit\" className={styles.btn}>\n        Register\n      </button>\n    </form>\n  );\n};\n\nexport default RegisterPage;\n","import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport styles from \"./Header.module.css\";\n\nconst Header = ({ isAuth }) => {\n  return (\n    <header>\n      <nav>\n        <ul className={styles.pageList}>\n          {!isAuth && (\n            <li className={styles.pageListItem}>\n              <NavLink to=\"/registration\" activeClassName={styles.active}>\n                Registration\n              </NavLink>\n            </li>\n          )}\n\n          {!isAuth && (\n            <li className={styles.pageListItem}>\n              <NavLink exact to=\"/\" activeClassName={styles.active}>\n                Login\n              </NavLink>\n            </li>\n          )}\n\n          {isAuth && (\n            <li className={styles.pageListItem}>\n              <NavLink to=\"/phonebook\" activeClassName={styles.active}>\n                Phonebook\n              </NavLink>\n            </li>\n          )}\n        </ul>\n      </nav>\n    </header>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    isAuth: state.authRoot.isAuth,\n  };\n};\n\nexport default connect(mapStateToProps)(Header);","export default {\n  GET_CONTACT_START: \"contacts/GET_CONTACT-START\",\n  GET_CONTACT_SUCCESS: \"contacts/GET_CONTACT_SUCCESS\",\n  GET_CONTACT_FAILURE: \"contacts/GET_CONTACT_FAILURE\",\n\n  ADD_CONTACT_START: \"contacts/ADD_CONTACT_START\",\n  ADD_CONTACT_SUCCESS: \"contacts/ADD_CONTACT_SUCCESS\",\n  ADD_CONTACT_FAILURE: \"contacts/ADD_CONTACT_FAILURE\",\n\n  DELETE_CONTACT_START: \"contacts/DELETE_CONTACT_START\",\n  DELETE_CONTACT_SUCCESS: \"contacts/DELETE_CONTACT_SUCCESS\",\n  DELETE_CONTACT_FAILURE: \"contacts/DELETE_CONTACT_FAILURE\",\n\n  FILTER_CONTACT: \"contacts/FILTER_CONTACT\",\n};","import contactsType from \"./contactsType\";\n\n/* GET */\nconst getContactStart = () => ({\n  type: contactsType.GET_CONTACT_START,\n});\n\nconst getContactSuccess = (contactList) => ({\n  type: contactsType.GET_CONTACT_SUCCESS,\n\n  payload: { contactList },\n});\n\nconst getContactFailure = (error) => ({\n  type: contactsType.GET_CONTACT_FAILURE,\n\n  payload: { error },\n});\n\n/* ADD */\nconst addContactStart = () => ({\n  type: contactsType.ADD_CONTACT_START,\n});\n\nconst addContactSuccess = (contact) => ({\n  type: contactsType.ADD_CONTACT_SUCCESS,\n\n  payload: {\n    contact,\n  },\n});\n\nconst addContactFailure = (error) => ({\n  type: contactsType.ADD_CONTACT_FAILURE,\n\n  payload: { error },\n});\n\n/* DELETE */\nconst deleteContactStart = () => ({\n  type: contactsType.DELETE_CONTACT_START,\n});\n\nconst deleteContactSuccess = (idContactDelete) => ({\n  type: contactsType.DELETE_CONTACT_SUCCESS,\n\n  payload: { id: idContactDelete },\n});\n\nconst deleteContactFailure = (error) => ({\n  type: contactsType.DELETE_CONTACT_FAILURE,\n\n  payload: { error },\n});\n\n/* FILTER */\nconst filterContact = (nameContact) => ({\n  type: contactsType.FILTER_CONTACT,\n\n  payload: {\n    name: nameContact,\n  },\n});\n\nexport default {\n  getContactStart,\n  getContactSuccess,\n  getContactFailure,\n\n  addContactStart,\n  addContactSuccess,\n  addContactFailure,\n\n  deleteContactStart,\n  deleteContactSuccess,\n  deleteContactFailure,\n\n  filterContact,\n};","import api from \"../../services/api\";\nimport contactsActions from \"./contactsAction\";\n\nconst getAllContactsOperations = () => (dispatch) => {\n  dispatch(contactsActions.getContactStart());\n\n  api\n    .getAllContacts()\n    .then(({ data }) => dispatch(contactsActions.getContactSuccess(data)))\n    .catch((error) => dispatch(contactsActions.getContactError(error)));\n};\n\nconst addContactOperations = (name, number) => (dispatch) => {\n  dispatch(contactsActions.addContactStart());\n\n  api\n    .addContact({ name, number })\n    .then(({ data }) => dispatch(contactsActions.addContactSuccess(data)))\n    .catch((error) => dispatch(contactsActions.addContactFailure(error)));\n};\n\nconst deleteContactOperations = (id) => (dispatch) => {\n  dispatch(contactsActions.deleteContactStart());\n\n  api\n    .deleteContact(id)\n    .then(() => dispatch(contactsActions.deleteContactSuccess(id)))\n    .catch((error) => dispatch(contactsActions.deleteContactFailure(error)));\n};\n\nexport default {\n  getAllContactsOperations,\n  addContactOperations,\n  deleteContactOperations,\n};\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport contactsOperations from \"../../redux/contacts/contactOperations\";\nimport styles from \"./Phonebook.module.css\";\n\nclass Phonebook extends Component {\n  state = {\n    contactName: \"\",\n    number: \"\",\n  };\n\n  handleChange = ({ target }) => {\n    const { name, value } = target;\n    this.setState({ [name]: value });\n  };\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n    const { contactName, number } = this.state;\n    const { addContact } = this.props;\n\n    this.setState({\n      contactName: \"\",\n      number: \"\",\n    });\n    addContact(contactName, number);\n  };\n\n  render() {\n    \n    const { contactName, number } = this.state;\n\n    return (\n      <form onSubmit={this.handleSubmit} style={{ marginLeft: \"30px\" }}>\n        <h2 className={styles.title} >Phonebook</h2>\n\n        <input\n          className={styles.inputName}\n          type=\"text\"\n          name=\"contactName\"\n          value={contactName}\n          onChange={this.handleChange}\n          placeholder=\"Enter name...\"\n          required\n        ></input>\n\n        <input\n          className={styles.inputNumber}\n          type=\"tel\"\n          name=\"number\"\n          value={number}\n          onChange={this.handleChange}\n          placeholder=\"Number...\"\n          required\n        ></input>\n\n        <button type=\"submit\" className={styles.btn}>Add contact</button>\n      </form>\n    );\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n  addContact: (name, number) =>\n    dispatch(contactsOperations.addContactOperations(name, number)),\n});\n\nexport default connect(null, mapDispatchToProps)(Phonebook);\n\n\n\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport contactsOperations from \"../../redux/contacts/contactOperations\";\nimport styles from \"./ContactItem.module.css\";\n\nconst ContactItem = ({ contact: { id, name, number }, deleteContact }) => {\n  return (\n    <li>\n      <span>{name}: </span>\n      <span>{number}</span>\n      <button\n        type=\"button\"\n        className={styles.btnDelete}\n        onClick={() => deleteContact(id)}\n      >\n        Delete\n      </button>\n    </li>\n  );\n};\n\nconst mapDispatchToProps = (dispatch, { id }) => {\n  return {\n    deleteContact: () =>\n      dispatch(contactsOperations.deleteContactOperations(id)),\n  };\n};\n\nexport default connect(null, mapDispatchToProps)(ContactItem);\n\n","import { createSelector } from \"reselect\";\n\nexport const getContact = (state) => state.contactRoot.contactReducer;\nexport const isLoading = (state) => state.contactRoot.loadingReducer;\nexport const getError = (state) => state.contactRoot.contactErrorReducer;\nexport const filterContact = (state) => state.contactRoot.filterReducer;\n\nexport const contactList = createSelector(\n  [getContact, filterContact],\n  (contacts, searchInput) => {\n    return contacts.filter((contact) =>\n      contact.name.toLowerCase().includes(searchInput.toLowerCase())\n    );\n  }\n);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport contactsAction from \"../../redux/contacts/contactsAction\";\nimport { filterContact } from \"../../redux/contacts/contactSelectors\";\n\nconst FilterContacts = ({ filter, onChange }) => {\n  return (\n    <>\n      <h4\n        style={{\n          marginLeft: \"30px\",\n          letterSpacing: \"1px\",\n        }}\n      >\n        Find contacts by name:\n      </h4>\n      <input\n        style={{ marginLeft: \"30px\", height: \"25px\", marginBottom: \"10px\" }}\n        type=\"text\"\n        name=\"filter\"\n        value={filter}\n        onChange={onChange}\n      ></input>\n    </>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    filter: filterContact(state),\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    onChange: (e) => dispatch(contactsAction.filterContact(e.target.value)),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(FilterContacts);\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport ContactItem from \"../ContactItem/ContactItem\";\nimport FilterContacts from \"../filterContacts/FilterContacts\";\nimport contactsOperations from \"../../redux/contacts/contactOperations\";\nimport { contactList } from \"../../redux/contacts/contactSelectors\";\n\n\nclass ContactList extends Component {\n  componentDidMount() {\n    const { getAllContacts } = this.props;\n    getAllContacts();\n  }\n\n  render() {\n    const { contactList, filter, onChange } = this.props;\n\n    return (\n      <>\n        <h2 style={{ marginLeft: \"30px\", color: \"blue\" }}>Contacts</h2>\n        <FilterContacts filter={filter} onChange={onChange} />\n        <ul>\n          {contactList.map((contact) => (\n            <ContactItem id={contact.id} contact={contact} key={contact.id} />\n          ))};\n        </ul> \n      </>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  \n  return {\n    contactList: contactList(state),\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    getAllContacts: () =>\n      dispatch(contactsOperations.getAllContactsOperations()),\n      \n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList);","import React from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport authOperations from \"../../redux/auth/authOperations\";\n\nconst UserMenu = () => {\n  const dispatch = useDispatch();\n  const onLogout = () => {\n    dispatch(authOperations.logoutOperation());\n  };\n\n  return (\n    <button\n      type=\"button\"\n      onClick={onLogout}\n      style={{\n        marginLeft: \"30px\",\n        marginBottom: \"15px\",\n        backgroundColor: \"red\",\n        color: \"white\",\n        fontWeight: \"bold\",\n        border: \"none\",\n        letterSpacing: \"0.5px\",\n        height: \"35px\",\n        width: \"100px\",\n      }}\n    >\n      Logout\n    </button>\n  );\n};\n\nexport default UserMenu;\n","import React from \"react\";\nimport Phonebook from \"../../components/phonebook/Phonebook\";\nimport ContactList from \"../../components/contactList/ContactList\";\nimport UserMenu from \"../../components/UserMenu/UserMenu\";\n\nconst UserPage = () => {\n  return (\n    <>\n      <Phonebook />\n      <ContactList />\n      <UserMenu />\n    </>\n  );\n};\n\nexport default UserPage;\n","import React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport { useSelector } from \"react-redux\";\n\nconst PrivateRoute = ({ component: Component, ...allProps }) => {\n  const token = useSelector((state) => state.authRoot.token);\n\n  return (\n    <Route\n      {...allProps}\n      render={(props) =>\n        token ? <Component {...props} /> : <Redirect to=\"/\" />\n      }\n    />\n  );\n};\n\nexport default PrivateRoute;\n","import React, { Component, createContext } from \"react\";\n\nconst Context = createContext();\nconst themeConfig = {\n  light: {\n    fontColor: \"black\",\n    bodybg: \"white\",\n  },\n  dark: {\n    fontColor: \"white\",\n    bodybg: \"black\",\n  },\n};\n\nclass ThemeContext extends Component {\n  static Consumer = Context.Consumer;\n\n  toggleTheme = () => {\n    this.setState((prevTheme) => {\n      if (prevTheme.theme === \"light\") {\n        return { theme: \"dark\", themeConfig: themeConfig.dark };\n      } else {\n        return { theme: \"light\", themeConfig: themeConfig.light };\n      }\n    });\n  };\n\n  state = {\n    theme: \"light\",\n    themeConfig: themeConfig.light,\n    toggleTheme: this.toggleTheme,\n  };\n\n  render() {\n    return (\n      <Context.Provider value={this.state}>\n        {this.props.children}\n      </Context.Provider>\n    );\n  }\n}\n\nexport default ThemeContext;\n\n\n","import React from \"react\";\nimport ThemeContext from \"../contexts/ThemeContext\";\n\n\nconst withTheme = (WrappedComponent) => {\n  return function WithTheme(props) {\n    return (\n      <ThemeContext.Consumer>\n        {(context) => {\n          return (\n            <WrappedComponent\n              {...props}\n              theme={context.theme}\n              themeConfig={context.themeConfig}\n              toggleTheme={context.toggleTheme}\n            />\n          );\n        }}\n      </ThemeContext.Consumer>\n    );\n  };\n};\n\nexport default withTheme;\n\n","import React, { Component } from \"react\";\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport AuthPage from \"./pages/AuthPage/AuthPage\";\nimport RegisterPage from \"./pages/RegisterPage/RegisterPage\";\nimport Header from \"./components/Header/Header\";\nimport PhonebookPage from \"./pages/PhonebookPage/PhonebookPage\";\nimport PrivateRoute from \"./services/PrivateRoute\";\nimport authOperations from \"./redux/auth/authOperations\";\nimport withTheme from \"./hoc/withTheme\";\n\nclass App extends Component {\n  componentDidMount() {\n    this.props.getUser();\n  }\n\n  render() {\n    const {\n      themeConfig: { fontColor, bodybg },\n    } = this.props;\n\n    return (\n      <BrowserRouter>\n        <div style={{ color: fontColor, background: bodybg }}>\n          <button\n            type=\"submit\"\n            style={{\n              marginLeft: \"20px\",\n              marginTop: \"20px\",\n              borderColor: \"white\",\n              height: \"35px\",\n              width: \"150px\",\n              backgroundColor: \"black\",\n              color: \"white\",\n              fontWeight: \"bold\",\n              letterSpacing: \"1px\",\n            }}\n            onClick={this.props.toggleTheme}\n          >\n            Change theme\n          </button>\n        </div>\n\n        <Header />\n\n        <Switch>\n          <Route exact path=\"/\" component={AuthPage} />\n          <PrivateRoute path=\"/phonebook\" component={PhonebookPage} />\n          <Route path=\"/registration\" component={RegisterPage} />\n        </Switch>\n      </BrowserRouter>\n    );\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n  getUser: () => dispatch(authOperations.getCurrentUser()),\n});\n\nexport default connect(null, mapDispatchToProps)(withTheme(App));\n","import { combineReducers } from \"redux\";\nimport contactsType from \"./contactsType\";\n\nconst contactReducer = (state = [], action) => {\n  switch (action.type) {\n    case contactsType.GET_CONTACT_SUCCESS:\n      return action.payload.contactList;\n\n    case contactsType.ADD_CONTACT_SUCCESS:\n      return [...state, action.payload.contact];\n\n    case contactsType.DELETE_CONTACT_SUCCESS:\n      return state.filter((contact) => contact.id !== action.payload.id);\n\n    default:\n      return state;\n  }\n};\n\nconst filterReducer = (state = \"\", action) => {\n  switch (action.type) {\n    case contactsType.FILTER_CONTACT:\n      return action.payload.name;\n\n    default:\n      return state;\n  }\n};\n\nconst loadingReducer = (state = false, { type }) => {\n  switch (type) {\n    case contactsType.GET_CONTACT_START:\n    case contactsType.ADD_CONTACT_START:\n    case contactsType.DELETE_CONTACT_START:\n      return true;\n\n    case contactsType.GET_CONTACT_SUCCESS:\n    case contactsType.GET_CONTACT_FAILURE:\n      return true;\n    case contactsType.ADD_CONTACT_SUCCESS:\n    case contactsType.ADD_CONTACT_FAILURE:\n     return true;\n    \n    case contactsType.DELETE_CONTACT_SUCCESS:\n    case contactsType.DELETE_CONTACT_FAILURE:\n      return false;\n\n    default:\n      return state;\n  }\n};\n\nconst contactErrorReducer = (state = null, { type, payload }) => {\n  switch (type) {\n    case contactsType.GET_CONTACT_FAILURE:\n    case contactsType.ADD_CONTACT_FAILURE:\n    case contactsType.DELETE_CONTACT_FAILURE:\n      return payload.error;\n\n    case contactsType.GET_CONTACT_START:\n    case contactsType.ADD_CONTACT_START:\n    case contactsType.DELETE_CONTACT_START:\n      return null;\n\n    default:\n      return state;\n  }\n};\n\nexport default combineReducers({\n  contactReducer: contactReducer,\n  filterReducer: filterReducer,\n  loading: loadingReducer,\n  contactError: contactErrorReducer,\n});\n\n","import authType from \"./authType\";\n\nconst initialAuthState = {\n  name: \"\",\n  isAuth: false,\n  token: \"\",\n  isLoading: false,\n  error: \"\",\n};\n\nconst authReducer = (state = initialAuthState, action) => {\n  switch (action.type) {\n    case \"auth/LOADING_START\":\n      return { ...state, isLoading: true };\n\n    case \"auth/LOADING_END\":\n      return { ...state, isLoading: false };\n\n    case \"auth/GET_USER_SUCCESS\":\n      return {\n        ...state,\n        name: action.payload.name,\n        isAuth: true,\n      };\n\n    case \"auth/GET_USER_FAILURE\":\n      console.log(action.payload);\n      return { ...state, error: action.payload.error };\n\n    case \"auth/LOGIN_SUCCESS\":\n      return {\n        ...state,\n        name: action.payload.user.name,\n        token: action.payload.token,\n        isAuth: true,\n      };\n\n    case \"auth/LOGIN_FAILURE\":\n      return { ...state, error: action.payload.error };\n\n    case \"auth/REGISTER_SUCCESS\":\n      return {\n        ...state,\n        name: action.payload.user.name,\n        token: action.payload.token,\n        isAuth: true,\n      };\n\n    case \"auth/REGISTER_FAILURE\":\n      return { ...state, error: action.payload.error };\n\n    case authType.LOGOUT_SUCCESS:\n      return initialAuthState;\n\n    default:\n      return state;\n  }\n};\n\nexport default authReducer;\n","import { combineReducers } from \"redux\";\nimport contactReducer from \"./contacts/contactsReducer\";\nimport authReducer from \"./auth/authReducer\";\n\nconst rootReducer = combineReducers({\n  contactRoot: contactReducer,\n  authRoot: authReducer,\n});\n\nexport default rootReducer;","import { createStore, applyMiddleware } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport { persistStore, persistReducer } from \"redux-persist\";\nimport storage from \"redux-persist/lib/storage\";\nimport rootReducer from \"./rootReducer\";\n\nconst persistConfig = {\n  key: \"auth\",\n  storage,\n  whitelist: [\"authRoot\"],\n};\n\nconst middleware = [thunk];\n\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\n\nexport const store = createStore(\n  persistedReducer,\n  composeWithDevTools(applyMiddleware(...middleware))\n);\n\nexport const persistor = persistStore(store);\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { PersistGate } from \"redux-persist/integration/react\";\nimport App from \"./App\";\nimport ThemeContext from \"./contexts/ThemeContext\";\nimport { Provider } from \"react-redux\";\nimport { store, persistor } from \"./redux/store\";\n\n\nReactDOM.render(\n  <Provider store={store}>\n    <PersistGate loading={null} persistor={persistor}>\n      <ThemeContext>\n        <App />\n      </ThemeContext>\n    </PersistGate>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}